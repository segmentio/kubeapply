# Fetch or build all required binaries
FROM golang:1.19 as builder

ARG VERSION_REF
RUN test -n "${VERSION_REF}"

ENV SRC github.com/segmentio/kubeapply

RUN apt-get update && apt-get install --yes \
    curl \
    unzip \
    wget

COPY . /go/src/${SRC}
RUN cd /usr/local/bin && /go/src/${SRC}/scripts/pull-deps.sh

WORKDIR /go/src/${SRC}

ENV CGO_ENABLED=1
ENV GO111MODULE=on

RUN make kubeapply VERSION_REF=${VERSION_REF} && \
    cp build/kubeapply /usr/local/bin
RUN make kubeapply-lambda VERSION_REF=${VERSION_REF} && \
    cp build/kubeapply-lambda /usr/local/bin

# Copy into final image
FROM public.ecr.aws/lambda/provided:al2

RUN yum install -y git unzip

# Not sure if awscli is needed for running lambda, but keeping it here for now
RUN curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
 && unzip awscliv2.zip \
 && ./aws/install \
 && rm -rf aws awscliv2.zip

COPY --from=builder \
    /usr/local/bin/aws-iam-authenticator \
    /usr/local/bin/helm \
    /usr/local/bin/kubectl \
    /usr/local/bin/kubeapply \
    /usr/local/bin/

COPY --from=builder /usr/local/bin/kubeapply-lambda ./kubeapply-lambda

ENTRYPOINT [ "./kubeapply-lambda" ]
